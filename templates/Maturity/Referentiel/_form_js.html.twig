<script>
    $(document).ready(function() {
        $('form[name=referentiel]').on('submit', function() {
            // Assign position to each domain, question and answer depending on their position in the DOM
            // Fixes https://gitlab.adullact.net/soluris/madis/-/issues/783
            $('#referentiel-sections-container').find('li').each(function(n, el) {
                $(el).find('input.domain-position').val(n)
                $(el).find('.referentielQuestions > li').each(function(nq, elq) {
                    $(elq).find('input.question-position').val(nq)
                    $(elq).find('.referentielAnswers > li').each(function(na, ela) {
                        $(ela).find('input.answer-position').val(na)
                    })
                })
            })
            this.submit()
        })
        $('body').on('click', '.add_section', addFormToCollection)
            .on('click', '.add_question', addFormToCollection)
            .on('click', '.add_answer', addFormToCollection)
            .on("click", '.box-link', function(ev) {
                ev.preventDefault()
                $(ev.currentTarget).parent().next().collapse('toggle');
                console.log(ev.currentTarget)
                if ($(this).html() === '<i class="fa fa-plus"></i>') {
                    $(this).html('<i class="fa fa-minus"></i>')
                } else {
                    $(this).html('<i class="fa fa-plus"></i>')
                }
            })
            .on('click', '.delete-section', function(ev) {
                ev.preventDefault()
                $(ev.currentTarget).parents('li').remove()
            })
            .on('click', '.duplicate-section', function(ev) {
                ev.preventDefault()
                alert('Désolé, cette fonctionalité n\'est pas encore prête')
            })
            .on('click', '.delete-question', function(ev) {
                ev.preventDefault()
                $(ev.currentTarget).parents('li.question-item').remove()
            })
            .on('click', '.delete-answer', function(ev) {
                ev.preventDefault()
                $(ev.currentTarget).parents('li.answer-item').remove()
            })

        function addFormToCollection(e){
            e.preventDefault()
            const btn = $(e.currentTarget)
            let type = e.currentTarget.classList[0];

            let html = $('#prototypes').data('prototype-section')
            if (type === 'add_section') {
                const collectionHolder = document.querySelector('.' + e.currentTarget.dataset.collectionHolderClass);
                collectionHolder.dataset.index++
                const index = collectionHolder.dataset.index;
                let html = $('#prototypes').data('prototype-section')
                html = html.replace(/__section_name__/g, index).replace(/__index__/g, index)
                btn.parent('div').find('ul.referentielSections').append('<li>'+html+'</li>');
                $('#referentiel_referentielSections_'+index+'_orderNumber').val(index);
                $('#referentiel_domains_'+index+'_position').val(index);
            } else if (type === 'add_question') {
                let html = $('#prototypes').data('prototype-question')
                const holder = btn.parent().parent().find('ul.referentielQuestions')
                const section = holder.data('section');
                const oldIndex = holder.data('index');
                const newIndex = holder.data('index') + 1
                html = html.replace(/__section_name__/g, section).replace(/__question_name__/g, oldIndex).replace('li', 'li class="question-item"').replace(/question__/g, "question_" + newIndex + "_")
                holder.append(html);

                holder.data('index', newIndex)
                $('#referentiel_referentielSections_'+ section + '_referentielQuestions_' + oldIndex + '_orderNumber').val(oldIndex);
                $('#referentiel_domains_'+ section + '_questions_' + oldIndex + '_position').val(oldIndex);
            } else {
                let html = $('#prototypes').data('prototype-answer')
                const holder = btn.parent().parent().parent().find('ul.referentielAnswers')

                const section = holder.data('section');
                const question = holder.data('question');
                const oldIndex = holder.data('index')
                html = html.replace(/__section_name__/g, section).replace(/__question_name__/g, question).replace(/__answer_name__/g, oldIndex).replace('li', 'li class="answer-item"')
                holder.append(html);
                const newIndex = holder.data('index') + 1
                holder.data('index', newIndex)
                $(`#referentiel_referentielSections_${section}_referentielQuestions_${question}_referentielAnswers_${oldIndex}_orderNumber`).val(oldIndex)
                $(`#referentiel_domains_${section}_questions_${question}_answers_${oldIndex}_position`).val(oldIndex)
            }

            dragdrop()
        }

        var $wrapper = $('.js-table-collection-wrapper');

        $wrapper.on('click', '.js-table-remove-item', function(e) {
            e.preventDefault();
            $(this).closest('.js-table-collection-item')
                .fadeOut()
                .remove();
        });

        $wrapper.on('click', '.js-table-collection-add', function(e) {
            console.log("Here");
            e.preventDefault();
            // Get the data-prototype explained earlier
            var prototype = $(this).parent().data('prototype');
            // get the new index
            var index = $(this).parent().data('index');
            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            var newForm = prototype.replace(/__name__/g, index);
            // increase the index with one for the next item
            $(this).parent().data('index', index + 1);
            // Display the form in the page before the "new" link
            $('#js-table-collection tr:last').after(newForm);
            $('.selectpicker').selectpicker('refresh');
        });

        $('.delete-file').on('click', function(ev) {
            var $t = $(ev.currentTarget)
            var $p = $t.parent();
            var $h = $p.parent().find('input[type=hidden]')
            $h.val(1);
            $p.remove();
        })

        dragdrop()
    });

    function dragdrop() {
        $("ul.referentielAnswers").each(function(n, el){
            $(el).sortable({
                stop: function( event, ui ) {
                    setTimeout(function() {
                        $(event.target).find(' > li').each(function(i, li) {
                            console.log('i', i, li)
                            $(li).find('input[type=hidden].answer-position').val(i)
                        })
                    }, 10)

                }
            })
        })

        $("ul.referentielQuestions").each(function(n, el){
            $(el).sortable({
                stop: function( event, ui ) {
                    setTimeout(function() {
                        $(event.target).find(' > li').each(function(i, li) {
                            console.log('i', i, li)
                            $(li).find('input[type=hidden].question-position').val(i)
                        })
                    }, 10)
                }
            })
        })

        $("ul.referentielSections").each(function(n, el){
            $(el).sortable({
                stop: function( event, ui ) {
                    setTimeout(function() {
                        $(event.target).find(' > li').each(function(i, li) {
                            console.log('i', i, li)
                            $(li).find('input[type=hidden].domain-position').val(i)
                        })
                    }, 10)
                }
            })
        })
    }
</script>
